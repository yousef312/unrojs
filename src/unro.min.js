const algos=["clearpath","insertion","lineare"],dfn=()=>{};let counter=0;const clamp=(t,e,r)=>t<e?e:t>r?r:t;Array.prototype.insert=function(t,e){var r,n,s;return this.splice((r=e,n=0,s=this.length,r<n?n:r>s?s:r),0,t),e};class Unro{#t=[];#e=null;#r=!1;#n=!1;constructor(){this.current=-1,this.maximum=100,this.algo="clearpath"}get lastAction(){return this.#e}get isFirstStack(){return!0===this.#n}get isLastStack(){return!0===this.#r}push(t){if(!t||"[object Object]"!==t.toString())return;let e=new Stack(t);if("function"==typeof t.init){if(t.init(e),!e.isReady)throw new Error("[UnroJS] the .init function not well constructed")}else if("function"!=typeof t.undo||"function"!=typeof t.redo)throw new Error("[UnroJS] wrong stack defintion in .push, a stack must have undo & redo or init functions");let r=this.current;return"lineare"===this.algo?this.current=this.#t.push(e)-1:"clearpath"===this.algo?(void 0!==this.#t[r+1]&&this.#t.splice(r+1,this.#t.length),this.current=this.#t.push(e)-1):"insertion"===this.algo&&(this.current=this.#t.insert(e,r+1)),this.#t.length>this.maximum&&(this.#t.shift(),this.current=r),this.current}undo(){if(!this.#n)return this.#e="undo",this.#t[this.current].undo(this),this.current>-2&&this.current--,this.current<0?this.#n=!0:(this.#r=!1,this)}redo(){return this.#t[this.current+1]?(this.current++,this.#t[this.current].redo(this),this.#e="redo",this.#n=!1,this):this.#r=!0}expand(t){return this.maximum="number"==typeof t?t:this.maximum,this}free(){return this.#t=[],this.current=0,this}moveTo(t){if(t===this.current)return"current";if(this.#t[t]){if(t>this.current)for(let e=this.current+1;e<=t;e++)this.current=e,this.#t[e].redo(this);else for(let e=this.current;e>=t;e--)this.current=e,this.#t[e].undo(this);return this.current=t,this.#t[t]}return"out-of-range"}setAlgorithme(t){return!!algos.includes(t)&&(this.algo=t,!0)}exportStackActions(){let t=[];return this.#t.forEach((e=>t.push({action:e.label,date:e.date}))),JSON.stringify({stacks:t})}acquire(t,e){if(t.bind){let r=this,n="ctrl+w",s="ctrl+y";"b"==e&&(n="ctrl+w",s="ctrl+shift+y"),t.bind(n,(function(){r.undo()})),t.bind(s,(function(){r.redo()}))}}get len(){return this.#t.length}}class Stack{#s=dfn;#i=dfn;#o=null;#a=null;#h=null;#c=!1;#u=++counter;constructor(t){this.#s=t.undo,this.#i=t.redo,this.date=new Date,this.label=t.label,(t.renderer2D instanceof CanvasRenderingContext2D||t.renderer2D instanceof OffscreenCanvasRenderingContext2D)&&(this.#o=t.renderer2D,this.#a=[])}get undo(){return this.#s}get redo(){return this.#i}get isReady(){return this.#c}get id(){return this.#u}save(t){null!=t&&(this.#h=t)}load(){return this.#h}copy(){if(!this.#o)throw new Error("[UnroJS] Define .renderer2D in order to use canvas copy/paste features.");if(this.#a.length<=2){let t=new OffscreenCanvas(this.#o.canvas.width,this.#o.canvas.height).getContext("2d");if(t.drawImage(this.#o.canvas,0,0),this.#a.push(t),2==this.#a.length){this.#c=!0;let t=this.#s,e=this.#i;this.#s=function(){this.paste("undo"),"function"==typeof t&&t()},this.#i=function(){this.paste("redo"),"function"==typeof e&&e()}}}}paste(t){if(!this.#o)throw new Error("[UnroJS] Define .renderer2D in order to use canvas copy/paste features.");let e=this.#a[[1,"undo"].includes(t)?0:[2,"redo"].includes(t)?1:-1];if(!e)throw new Error(`[UnroJS] Unknown "step" in .paste "${t}"`);this.#o.clearRect(0,0,this.#o.canvas.width,this.#o.canvas.height),this.#o.drawImage(e.canvas,0,0)}}function unro(){return new Unro}window.unro=unro;export default unro;