!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t="undefined"!=typeof globalThis?globalThis:t||self).unro=e()}(this,function(){"use strict";const t=["clearpath","insertion","lineare"],e=()=>{};let r=0;Array.prototype.insert=function(t,e){var r,n,i;return this.splice((r=e,n=0,i=this.length,r<n?n:r>i?i:r),0,t),e};class n{#t=[];#e=null;#r=0;constructor(){this.current=-1,this.maximum=100,this.algo="clearpath"}get lastAction(){return this.#e}push(t){if(!t||"[object Object]"!==t.toString())return;let e=new i(t);if("function"==typeof t.init){if(t.init(e),!e.isReady)throw new Error("[UnroJS] the .init function not well constructed")}else if("function"!=typeof t.undo||"function"!=typeof t.redo)throw new Error("[UnroJS] wrong stack defintion in .push, a stack must have undo & redo or init functions");let r=this.current;return"lineare"===this.algo?this.current=this.#t.push(e)-1:"clearpath"===this.algo?(void 0!==this.#t[r+1]&&this.#t.splice(r+1,this.#t.length),this.current=this.#t.push(e)-1):"insertion"===this.algo&&(this.current=this.#t.insert(e,r+1)),this.#t.length>this.maximum&&(this.#t.shift(),this.current=r),this.#r=0,this.current}undo(){return this.#t[this.current].undo(this),this.#t[this.current-1]&&this.current--,this.#e="undo",this}redo(){return this.#t[this.current+1]&&this.current++,this.#t[this.current].redo(this),this.#e="redo",this}expand(t){return this.maximum="number"==typeof t?t:this.maximum,this}free(){return this.#t=[],this.current=0,this}moveTo(t){if(t===this.current)return"current";if(this.#t[t]){if(t>this.current)for(let e=this.current+1;e<=t;e++)this.current=e,this.#t[e].redo(this);else for(let e=this.current;e>=t;e--)this.current=e,this.#t[e].undo(this);return this.current=t,this.#t[t]}return"out-of-range"}setAlgorithme(e){return!!t.includes(e)&&(this.algo=e,!0)}exportStackActions(){let t=[];return this.#t.forEach(e=>t.push({action:e.label,date:e.date})),JSON.stringify({stacks:t})}acquire(t,e){if(t.bind){let r=this,n="ctrl+w",i="ctrl+y";"b"==e&&(n="ctrl+w",i="ctrl+shift+y"),t.bind(n,function(){r.undo()}),t.bind(i,function(){r.redo()})}}get len(){return this.#t.length}}class i{#n=e;#i=e;#s=null;#h=null;#o=null;#c=!1;#a=++r;constructor(t){this.#n=t.undo,this.#i=t.redo,this.date=new Date,this.label=t.label,t.renderer2D instanceof CanvasRenderingContext2D&&(this.#s=t.renderer2D,this.#h=[])}get undo(){return this.#n}get redo(){return this.#i}get isReady(){return this.#c}get id(){return this.#a}save(t){null!=t&&(this.#o=t)}load(){return this.#o}copy(){if(!this.#s)throw new Error("[UnroJS] Define .renderer2D in order to use canvas copy/paste features.");if(this.#h.length<=2){let t=new OffscreenCanvas(this.#s.canvas.width,this.#s.canvas.height).getContext("2d");if(t.drawImage(this.#s.canvas,0,0),this.#h.push(t),2==this.#h.length){this.#c=!0;let t=this.#n,e=this.#i;this.#n=function(){this.paste("undo"),"function"==typeof t&&t()},this.#i=function(){this.paste("redo"),"function"==typeof e&&e()}}}}paste(t){if(!this.#s)throw new Error("[UnroJS] Define .renderer2D in order to use canvas copy/paste features.");let e=this.#h[[1,"undo"].includes(t)?0:[2,"redo"].includes(t)?1:-1];if(!e)throw new Error(`[UnroJS] Unknown "step" in .paste "${t}"`);this.#s.clearRect(0,0,this.#s.canvas.width,this.#s.canvas.height),this.#s.drawImage(e.canvas,0,0)}}function s(){return new n}return window.unro=s,s});
//# sourceMappingURL=unro.umd.min.js.map
